{"version":3,"sources":["webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin-user-guard.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/admin.scss","webpack:///./src/app/user/user.service.ts"],"names":[],"mappings":"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","file":"app-admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AdminComponent } from './admin.component';\r\nimport { OnlyAdminUsersGuard } from './admin-user-guard';\r\n\r\nconst routes: Routes = [{\r\n  path: 'admin',\r\n  canActivate: [OnlyAdminUsersGuard],\r\n  children: [{\r\n    path: '',\r\n    component: AdminComponent,\r\n  }]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AdminRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from \"@angular/router\";\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable()\r\nexport class OnlyAdminUsersGuard implements CanActivate {\r\n  constructor() {}\r\n\r\n  canActivate() {\r\n    const user = (<any>window).user;\r\n    return user && user.isAdmin;\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\">\\r\\n        <div fxFlex=\\\"100%\\\" class=\\\"containter-title\\\">Manage Users</div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutWrap fxLayoutGap=\\\"0.5%\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"100%\\\" class=\\\"mat-elevation-z8\\\">  \\r\\n            <table mat-table [dataSource]=\\\"usersList\\\">\\r\\n            \\r\\n                <!-- Fullname Column -->\\r\\n                <ng-container matColumnDef=\\\"fullname\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fullname}} </td>\\r\\n                </ng-container>\\r\\n            \\r\\n                <!-- Email Column -->\\r\\n                <ng-container matColumnDef=\\\"email\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Email </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n                </ng-container>\\r\\n            \\r\\n                <!-- Roles Column -->\\r\\n                <ng-container matColumnDef=\\\"roles\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Roles </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.roles.join(', ')}} </td>\\r\\n                </ng-container>\\r\\n            \\r\\n                <!-- Created Date Column -->\\r\\n                <ng-container matColumnDef=\\\"createdAt\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Created Date </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.createdAt}} </td>\\r\\n                </ng-container>\\r\\n            \\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../user/user.service';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { MatTableDataSource, MatSort } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.scss']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  usersList: Array<any> = [];\r\n  dataSource;\r\n      displayedColumns = [];\r\n      @ViewChild(MatSort) sort: MatSort;\r\n\r\n      /**\r\n       * Pre-defined columns list for user table\r\n       */\r\n      columnNames = [{\r\n        id: 'fullname',\r\n        value: 'Name'\r\n\r\n      }, {\r\n        id: 'email',\r\n        value: 'Email'\r\n      }, {\r\n        id: 'roles',\r\n        value: 'Roles'\r\n      }, {\r\n        id: 'createdAt',\r\n        value: 'Created date'\r\n      }];\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  public ngOnInit() {\r\n    this.userService.getUsers()\r\n      .subscribe(data => {\r\n        this.usersList = data.usersList;\r\n        this.displayedColumns = this.columnNames.map(x => x.id);\r\n      });\r\n  }\r\n}\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport {AdminComponent} from './admin.component';\r\nimport {OnlyAdminUsersGuard} from './admin-user-guard';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    OnlyAdminUsersGuard\r\n  ]})\r\nexport class AdminModule {}\r\n","module.exports = \"table{width:100%}\\n\"","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TokenStorage } from '../auth/token.storage';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient, private token: TokenStorage) {}\r\n\r\n  public $userSource = new Subject<any>();\r\n\r\n  getUsers(): Observable <any> {\r\n    return Observable.create(observer => {\r\n      this.http.get(environment.endPoint + 'user')\r\n      .subscribe((data: any) => {\r\n          observer.next({usersList: data});\r\n          observer.complete();\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}